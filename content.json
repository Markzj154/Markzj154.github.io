{"pages":[],"posts":[{"title":"进制与运算符","text":"print()函数print()函数，功能是在控制台输入括号中的内容 1print(\"hello world!\") 注释注释是代码中对代码进行解释和说明的文本内容；不会影响程序的功能和执行单行注释：在一行文字的前面加#多行注释：将注释内容写在三个双引号或三个单引号里面（但一般使用三个双引号） 语句一条语句占一行，语句结束后不用加分号如果一行要显示多行语句，语句必须用分号隔开 12num_1 = 1num_2 = 2 ; num_3 = 3 如果一条语句很长，需要多行显示的时候，可以在与语句中\\然后再换行（注意：不能破坏数据本身） 123num1 = 12 + 2 + 23 - 34\\ - 22 + 2print(num1) 缩进python中一行代码的开头不能随便的加缩进（空格或者制表符）python语法要求必须要有缩进的位置一定要加缩进 1234if num &gt; 10: print(num) else: print(None) 标识符标识符是用来命名用的，一般是给变量命名、函数命名或者类命名……标识符规则：所有标识符都必须是由字母、数字、下划线组成；不能以数字开头注意：python2.x以后，标识符中可以出现中文、日语、韩语等符号，但是实际开发不建议使用 关键字（保留字）关键字就是python中有特殊功能和特殊意义的标识符 12345678910import keywordprint(keyword.kwlist)\"\"\"['False', 'None', 'True', 'and', 'as', 'assert','break', 'class', 'continue', 'def', 'del', 'elif','else', 'except', 'finally', 'for', 'from','global', 'if', 'import', 'in', 'is', 'lambda','nonlocal', 'not', 'or', 'pass', 'raise','return', 'try', 'while', 'with', 'yield']\"\"\" 常见数据类型和数据数字数据：整型(int)、浮点型(float)字符串(str)：用双引号或者单引号将文本数据引起来布尔(bool)：只有False、True两个值，True代表真/肯定，False代表假/否定列表(list)、元组(tuple)、集合(set)、字典(dict)、函数(function)等类型转换：类型名（数据）-&gt;将括号中的数据转换成指定的类型并返回 12print(int(2.33))print(float(10)) print和inputprint函数:输出函数，在控制台打印print后面括号中的内容的结果input函数:获取从控制台输入的的内容(输入回车的时候就完成)input(提示信息)；不管在键盘上输入的是什么，input返回的结果的类型都是字符串类型 12value = input('hello world:')print(value, type(value)) 计算机只能存储和处理二进制数据int类型–包含所有的整数，整数可可以表示为十进制、二进制、八进制和十六进制十进制a.基数:0,1,2,3,4,5,6,7,8,9b.进位:逢十进一c.位权:123 = 100 + 20 + 3 = 110^2 + 210^1 + 3*10^0d.表示方式:默认写入为十进制 二进制a.基数:0, 1b.进位:逢二进一c.位权:111(2) = 12^2 + 12^1 + 1*2^0 = 7(10)d.表示方式:在二进制数前加上前缀0b或0Be.转换:直接打印 八进制a.基数:0, 1, 2, 3, 4, 5, 6, 7b.进位:逢八进一c.位权:111(8) = 18^2 + 18^1 + 1*8^0 = 73(10)d.表示方式:在八进制数前加上前缀0o或者0Oe.转换:oct() 十六进制a.基数:0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A/a, B/b, C/c, D/d, E/e, F/fb.进位:逢十六进一c.位权:111(16) = 116^2 + 116^1 + 1*16^0 = 273(273)d.表示方式:在十六进制数前加上前缀0x或0Xe.转换:hex() 123456789num_2 = 0b1101print('转二进制', bin(100), bin(0o100), bin(0x100e))print(num_2)num_8 = 0o67print('转八进制', oct(0b100), oct(100), oct(0x100e))print(num_8)num_16 = 0xe34aprint('转十六进制', hex(100), hex(0o100), hex(0b100))print(num_16) 计算机存数据的时候，只能存数字，而且存的是数字的二进制的补码位(bit)1字节(byte) = 8bit1kb = 1024byte1M = 1024kb1G = 1024M1T = 1024G 注意：正数的原码、反码、补码一样1、原码 = 符号位(0表示正，1表示负) + 真值(数字转换成二进制的值)10 -&gt; 1010(真值) -&gt;101010的原码:00000000 00000000 00000000 00001010-10的原码:10000000 00000000 00000000 000010102、负数的反码:符号为不变，其他位取反(0变1，1变0)10的反码:00000000 00000000 00000000 00001010-10的反码:11111111 11111111 11111111 111101013、负数的补码:反码加110的补码:00000000 00000000 00000000 00001010-10的补码:11111111 11111111 11111111 11110110 4、计算机负数采用补码的原因：计算机没有减法器，负数采用原码进行加法运算的时候结果不对，采用补码结果才对 python支持的运算符:数学运算符、比较运算符、逻辑运算符、位运算、赋值运算符1、数学运算符: +, -, , /, %, //, * %用法a.判断一个数的奇偶性：让数字对2取余，看结果是1还是0b.判断一个数能否被另一个数整除c.取一个数的后面几位 利用%、//可以取一个数中的任意一位数字2、比较运算符&gt;, &lt;, &gt;=, &lt;=, ==, != 所有比较运算符的结果都是布尔值（不是True就是False）","link":"/进制与运算符/"}],"tags":[{"name":"python","slug":"python","link":"/tags/python/"}],"categories":[]}